morpho <- readDiscreteCharacterData(input_matrix)

moves = VectorMoves()
monitors = VectorMonitors()

phylogeny <- readTrees(input_tree)[1]

Q_morpho <- fnJC(2)

mu_morpho ~ dnExponential( 1.0 )

moves.append( mvScale(mu_morpho,lambda=1, weight=2.0) )

phyMorpho ~ dnPhyloCTMC(tree=phylogeny, Q=Q_morpho, branchRates=mu_morpho, type="Standard")

phyMorpho.clamp(morpho)

mymodel = model(phylogeny)

monitors.append( mnModel(filename="output/mk.log", printgen=10) )

monitors.append( mnScreen(printgen=100) )

monitors.append( mnJointConditionalAncestralState(tree=phylogeny,
                                                   ctmc=phyMorpho,
                                                   filename="output/mk.states.txt",
                                                   type="Standard",
                                                   printgen=1,
                                                   withTips=true,
                                                   withStartStates=false) )
                                                   
mymcmc = mcmc(mymodel, monitors, moves, nruns=2, combine="mixed")

mymcmc.run(generations=1000, tuningInterval=20)

anc_states = readAncestralStateTrace("output/mk.states.txt")
anc_tree = ancestralStateTree(tree=phylogeny, ancestral_state_trace_vector=anc_states, include_start_states=false, file= output_AS, burnin=0.25, summary_statistic="MAP", site=1)
writeNexus( anc_tree, filename= output_Tree )

q()
